{"id":"script.js","dependencies":[{"name":"C:\\Users\\Darko\\Desktop\\Programming\\Studies\\Complete JS course\\JAVASCRIPT\\modules\\package.json","includedInParent":true,"mtime":1691252286031},{"name":"./shoppingCart.js","loc":{"line":28,"column":35},"parent":"C:\\Users\\Darko\\Desktop\\Programming\\Studies\\Complete JS course\\JAVASCRIPT\\modules\\script.js","resolved":"C:\\Users\\Darko\\Desktop\\Programming\\Studies\\Complete JS course\\JAVASCRIPT\\modules\\shoppingCart.js"},{"name":"lodash-es","loc":{"line":99,"column":37},"parent":"C:\\Users\\Darko\\Desktop\\Programming\\Studies\\Complete JS course\\JAVASCRIPT\\modules\\script.js","resolved":"C:\\Users\\Darko\\Desktop\\Programming\\Studies\\Complete JS course\\JAVASCRIPT\\modules\\node_modules\\lodash-es\\lodash.js"}],"generated":{"js":"\"use strict\";\n\nvar _shoppingCart = _interopRequireWildcard(require(\"./shoppingCart.js\"));\n\nvar _lodashEs = _interopRequireDefault(require(\"lodash-es\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// Importing module\n// import { addToCart } from './shoppingCart.js'; // string with a location of the module\n// or importing multiple at once:\n// import { addToCart, totalPrice as price, tq } from './shoppingCart.js'; // we can rename imports: totalPrice as price\n// addToCart('bread', 5);\n// console.log(price, tq);\nconsole.log('Importing module'); // importing all the exports at once:\n// creating an object containg everything that is exported in another module\n// import * as ShoppingCart from './shoppingCart.js';\n// this module is now basically exporting a public API, just like a class (with methods and promerties)\n// to use something from here we have to take it out from this object\n// ShoppingCart.addToCart('bread', 5);\n// console.log(ShoppingCart.totalPrice);\n//importing default export (giving it a name we want, without {} like with a named export/import)\n\n(0, _shoppingCart.default)('pizza', 2); // default and named exports can be imported together (but in practice we never mix these two):\n// import add, { addToCart, totalPrice as price, tq } from './shoppingCart.js';\n// console.log(price);\n\n(0, _shoppingCart.default)('bread', 3);\n(0, _shoppingCart.default)('apples', 6);\nconsole.log(_shoppingCart.cart); // import is a live connection, not simply a copy, they point at the same place in memory (cart was empty array as export from another module, but after calling add() which pushes objects to array, now cart looks like this)\n//// Top level await\n// in modules await keyword works outside of async function, but it's blocking execution of entire module, and of the module that is imported to (blocking code)\n// const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n// const data = await res.json();\n// console.log(data);\n\nvar getLastPost =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime().mark(function _callee() {\n    var res, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/posts');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            title: data.at(-1).title,\n            text: data.at(-1).body\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function getLastPost() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar lastPost = getLastPost(); // not very clean\n// lastPost.then(last => console.log(last));\n// const lastPost2 = await getLastPost();\n// console.log(lastPost2);\n//// Module patern (way of using modules before) - making IIFE (immediatelly invoked function expression)\n// const ShoppingCart2 = (function () {\n//   const cart = [];\n//   const shippingCost = 10;\n//   const totalPrice = 237;\n//   const totalQuantity = 23;\n//   const addToCart = function (product, quantity) {\n//     cart.push({ product, quantity });\n//     console.log(\n//       `${quantity} ${product} added to cart (shipping cost is ${shippingCost})`\n//     );\n//   };\n//   const orderStock = function (product, quantity) {\n//     console.log(`${quantity} ${product} ordered from supplier`);\n//   };\n//   return {\n//     addToCart,\n//     cart,\n//     totalPrice,\n//     totalQuantity,\n//   };\n// })();\n// ShoppingCart2.addToCart('apple', 4);\n// ShoppingCart2.addToCart('pizza', 2);\n// console.log(ShoppingCart2);\n// console.log(ShoppingCart2.shippingCost);\n//// CommonJS modules - in Node.js\n// export\n// export.function(product, quantity){\n//   cart.push({product, quantity})\n//   console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\n// }\n// // import\n// const {addToCart} = require(\"./shoppingCart.js\")\n///// introduction to NPM\n// import { default as cloneDeep } from './node_modules/lodash-es/cloneDeep.js';\n// with parcel (or any other bundler) there is no need to specify the entire path to a module, instead all we need to say is we want to include lodash library:\n\nvar state = {\n  cart: [{\n    product: 'bread',\n    quantity: 5\n  }, {\n    product: 'pizza',\n    quantity: 5\n  }],\n  user: {\n    loggedIn: true\n  }\n}; // creating deep copy\n\nvar stateClone = Object.assign({}, state);\nvar stateDeepClone = (0, _lodashEs.default)(state);\nstate.user.loggedIn = false;\nconsole.log(stateClone);\nconsole.log(stateDeepClone); // whenever we change modules, it will trigger rebuilt with parcel, and that new bundle will be injected into the browser not triggering whole page reload\n\nif (module.hot) {\n  module.hot.accept();\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"script.js","original":{"line":21,"column":0}},{"generated":{"line":5,"column":0},"source":"script.js","original":{"line":99,"column":0}},{"generated":{"line":15,"column":47},"source":"script.js","original":{"line":2,"column":0}},{"generated":{"line":21,"column":0},"source":"script.js","original":{"line":1,"column":0}},{"generated":{"line":22,"column":0},"source":"script.js","original":{"line":3,"column":0}},{"generated":{"line":23,"column":0},"source":"script.js","original":{"line":4,"column":0}},{"generated":{"line":24,"column":0},"source":"script.js","original":{"line":5,"column":0}},{"generated":{"line":25,"column":0},"source":"script.js","original":{"line":6,"column":0}},{"generated":{"line":26,"column":0},"source":"script.js","original":{"line":7,"column":0}},{"name":"console","generated":{"line":27,"column":0},"source":"script.js","original":{"line":9,"column":0}},{"generated":{"line":27,"column":7},"source":"script.js","original":{"line":9,"column":7}},{"name":"log","generated":{"line":27,"column":8},"source":"script.js","original":{"line":9,"column":8}},{"generated":{"line":27,"column":11},"source":"script.js","original":{"line":9,"column":0}},{"generated":{"line":27,"column":12},"source":"script.js","original":{"line":9,"column":12}},{"generated":{"line":27,"column":30},"source":"script.js","original":{"line":9,"column":0}},{"generated":{"line":27,"column":33},"source":"script.js","original":{"line":11,"column":0}},{"generated":{"line":28,"column":0},"source":"script.js","original":{"line":12,"column":0}},{"generated":{"line":29,"column":0},"source":"script.js","original":{"line":13,"column":0}},{"generated":{"line":30,"column":0},"source":"script.js","original":{"line":14,"column":0}},{"generated":{"line":31,"column":0},"source":"script.js","original":{"line":16,"column":0}},{"generated":{"line":32,"column":0},"source":"script.js","original":{"line":17,"column":0}},{"generated":{"line":33,"column":0},"source":"script.js","original":{"line":18,"column":0}},{"generated":{"line":34,"column":0},"source":"script.js","original":{"line":20,"column":0}},{"generated":{"line":36,"column":0},"source":"script.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":27},"source":"script.js","original":{"line":22,"column":4}},{"generated":{"line":36,"column":34},"source":"script.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":36},"source":"script.js","original":{"line":22,"column":13}},{"generated":{"line":36,"column":37},"source":"script.js","original":{"line":22,"column":0}},{"generated":{"line":36,"column":40},"source":"script.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"script.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"script.js","original":{"line":26,"column":0}},{"generated":{"line":40,"column":0},"source":"script.js","original":{"line":29,"column":0}},{"generated":{"line":40,"column":27},"source":"script.js","original":{"line":29,"column":4}},{"generated":{"line":40,"column":34},"source":"script.js","original":{"line":29,"column":0}},{"generated":{"line":40,"column":36},"source":"script.js","original":{"line":29,"column":13}},{"generated":{"line":40,"column":37},"source":"script.js","original":{"line":29,"column":0}},{"generated":{"line":41,"column":0},"source":"script.js","original":{"line":30,"column":0}},{"generated":{"line":41,"column":27},"source":"script.js","original":{"line":30,"column":4}},{"generated":{"line":41,"column":35},"source":"script.js","original":{"line":30,"column":0}},{"generated":{"line":41,"column":37},"source":"script.js","original":{"line":30,"column":14}},{"generated":{"line":41,"column":38},"source":"script.js","original":{"line":30,"column":0}},{"name":"console","generated":{"line":42,"column":0},"source":"script.js","original":{"line":31,"column":0}},{"generated":{"line":42,"column":7},"source":"script.js","original":{"line":31,"column":7}},{"name":"log","generated":{"line":42,"column":8},"source":"script.js","original":{"line":31,"column":8}},{"generated":{"line":42,"column":11},"source":"script.js","original":{"line":31,"column":0}},{"name":"cart","generated":{"line":42,"column":12},"source":"script.js","original":{"line":31,"column":12}},{"generated":{"line":42,"column":30},"source":"script.js","original":{"line":31,"column":0}},{"generated":{"line":42,"column":33},"source":"script.js","original":{"line":31,"column":19}},{"generated":{"line":43,"column":0},"source":"script.js","original":{"line":33,"column":0}},{"generated":{"line":44,"column":0},"source":"script.js","original":{"line":34,"column":0}},{"generated":{"line":45,"column":0},"source":"script.js","original":{"line":35,"column":0}},{"generated":{"line":46,"column":0},"source":"script.js","original":{"line":36,"column":0}},{"generated":{"line":47,"column":0},"source":"script.js","original":{"line":37,"column":0}},{"generated":{"line":49,"column":0},"source":"script.js","original":{"line":39,"column":0}},{"name":"getLastPost","generated":{"line":49,"column":4},"source":"script.js","original":{"line":39,"column":6}},{"generated":{"line":49,"column":15},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":50,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":51,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":52,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":53,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":54,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":54,"column":29},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":55,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":56,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":57,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":58,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":59,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":60,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"name":"fetch","generated":{"line":60,"column":17},"source":"script.js","original":{"line":40,"column":20}},{"generated":{"line":60,"column":22},"source":"script.js","original":{"line":40,"column":25}},{"generated":{"line":60,"column":23},"source":"script.js","original":{"line":40,"column":26}},{"generated":{"line":60,"column":67},"source":"script.js","original":{"line":40,"column":25}},{"generated":{"line":60,"column":68},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":62,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"name":"res","generated":{"line":63,"column":0},"source":"script.js","original":{"line":40,"column":8}},{"name":"res","generated":{"line":63,"column":10},"source":"script.js","original":{"line":40,"column":8}},{"generated":{"line":63,"column":13},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":64,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":65,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"name":"res","generated":{"line":65,"column":17},"source":"script.js","original":{"line":41,"column":21}},{"generated":{"line":65,"column":20},"source":"script.js","original":{"line":41,"column":24}},{"name":"json","generated":{"line":65,"column":21},"source":"script.js","original":{"line":41,"column":25}},{"generated":{"line":65,"column":25},"source":"script.js","original":{"line":41,"column":21}},{"generated":{"line":65,"column":27},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":67,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"name":"data","generated":{"line":68,"column":0},"source":"script.js","original":{"line":41,"column":8}},{"name":"data","generated":{"line":68,"column":10},"source":"script.js","original":{"line":41,"column":8}},{"generated":{"line":68,"column":14},"source":"script.js","original":{"line":39,"column":20}},{"name":"console","generated":{"line":69,"column":0},"source":"script.js","original":{"line":42,"column":2}},{"name":"console","generated":{"line":69,"column":10},"source":"script.js","original":{"line":42,"column":2}},{"generated":{"line":69,"column":17},"source":"script.js","original":{"line":42,"column":9}},{"name":"log","generated":{"line":69,"column":18},"source":"script.js","original":{"line":42,"column":10}},{"generated":{"line":69,"column":21},"source":"script.js","original":{"line":42,"column":2}},{"name":"data","generated":{"line":69,"column":22},"source":"script.js","original":{"line":42,"column":14}},{"generated":{"line":69,"column":26},"source":"script.js","original":{"line":42,"column":2}},{"generated":{"line":70,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":70,"column":43},"source":"script.js","original":{"line":44,"column":9}},{"name":"title","generated":{"line":71,"column":0},"source":"script.js","original":{"line":44,"column":11}},{"name":"title","generated":{"line":71,"column":12},"source":"script.js","original":{"line":44,"column":11}},{"generated":{"line":71,"column":17},"source":"script.js","original":{"line":44,"column":16}},{"name":"data","generated":{"line":71,"column":19},"source":"script.js","original":{"line":44,"column":18}},{"generated":{"line":71,"column":23},"source":"script.js","original":{"line":44,"column":22}},{"name":"at","generated":{"line":71,"column":24},"source":"script.js","original":{"line":44,"column":23}},{"generated":{"line":71,"column":26},"source":"script.js","original":{"line":44,"column":18}},{"generated":{"line":71,"column":27},"source":"script.js","original":{"line":44,"column":26}},{"generated":{"line":71,"column":28},"source":"script.js","original":{"line":44,"column":27}},{"generated":{"line":71,"column":29},"source":"script.js","original":{"line":44,"column":18}},{"name":"title","generated":{"line":71,"column":31},"source":"script.js","original":{"line":44,"column":30}},{"generated":{"line":71,"column":36},"source":"script.js","original":{"line":44,"column":9}},{"name":"text","generated":{"line":72,"column":0},"source":"script.js","original":{"line":44,"column":37}},{"name":"text","generated":{"line":72,"column":12},"source":"script.js","original":{"line":44,"column":37}},{"generated":{"line":72,"column":16},"source":"script.js","original":{"line":44,"column":41}},{"name":"data","generated":{"line":72,"column":18},"source":"script.js","original":{"line":44,"column":43}},{"generated":{"line":72,"column":22},"source":"script.js","original":{"line":44,"column":47}},{"name":"at","generated":{"line":72,"column":23},"source":"script.js","original":{"line":44,"column":48}},{"generated":{"line":72,"column":25},"source":"script.js","original":{"line":44,"column":43}},{"generated":{"line":72,"column":26},"source":"script.js","original":{"line":44,"column":51}},{"generated":{"line":72,"column":27},"source":"script.js","original":{"line":44,"column":52}},{"generated":{"line":72,"column":28},"source":"script.js","original":{"line":44,"column":43}},{"name":"body","generated":{"line":72,"column":30},"source":"script.js","original":{"line":44,"column":55}},{"generated":{"line":73,"column":0},"source":"script.js","original":{"line":44,"column":9}},{"generated":{"line":73,"column":11},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":75,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":76,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":77,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":78,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":79,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":80,"column":0},"source":"script.js","original":{"line":39,"column":20}},{"generated":{"line":80,"column":3},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":82,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"name":"getLastPost","generated":{"line":82,"column":18},"source":"script.js","original":{"line":39,"column":6}},{"generated":{"line":82,"column":29},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":83,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":84,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":85,"column":0},"source":"script.js","original":{"line":39,"column":17}},{"generated":{"line":85,"column":3},"source":"script.js","original":{"line":39,"column":0}},{"generated":{"line":87,"column":0},"source":"script.js","original":{"line":47,"column":0}},{"name":"lastPost","generated":{"line":87,"column":4},"source":"script.js","original":{"line":47,"column":6}},{"generated":{"line":87,"column":12},"source":"script.js","original":{"line":47,"column":14}},{"name":"getLastPost","generated":{"line":87,"column":15},"source":"script.js","original":{"line":47,"column":17}},{"generated":{"line":87,"column":26},"source":"script.js","original":{"line":47,"column":28}},{"generated":{"line":87,"column":28},"source":"script.js","original":{"line":47,"column":0}},{"generated":{"line":87,"column":30},"source":"script.js","original":{"line":49,"column":0}},{"generated":{"line":88,"column":0},"source":"script.js","original":{"line":50,"column":0}},{"generated":{"line":89,"column":0},"source":"script.js","original":{"line":52,"column":0}},{"generated":{"line":90,"column":0},"source":"script.js","original":{"line":53,"column":0}},{"generated":{"line":91,"column":0},"source":"script.js","original":{"line":55,"column":0}},{"generated":{"line":92,"column":0},"source":"script.js","original":{"line":56,"column":0}},{"generated":{"line":93,"column":0},"source":"script.js","original":{"line":57,"column":0}},{"generated":{"line":94,"column":0},"source":"script.js","original":{"line":58,"column":0}},{"generated":{"line":95,"column":0},"source":"script.js","original":{"line":59,"column":0}},{"generated":{"line":96,"column":0},"source":"script.js","original":{"line":60,"column":0}},{"generated":{"line":97,"column":0},"source":"script.js","original":{"line":62,"column":0}},{"generated":{"line":98,"column":0},"source":"script.js","original":{"line":63,"column":0}},{"generated":{"line":99,"column":0},"source":"script.js","original":{"line":64,"column":0}},{"generated":{"line":100,"column":0},"source":"script.js","original":{"line":65,"column":0}},{"generated":{"line":101,"column":0},"source":"script.js","original":{"line":66,"column":0}},{"generated":{"line":102,"column":0},"source":"script.js","original":{"line":67,"column":0}},{"generated":{"line":103,"column":0},"source":"script.js","original":{"line":69,"column":0}},{"generated":{"line":104,"column":0},"source":"script.js","original":{"line":70,"column":0}},{"generated":{"line":105,"column":0},"source":"script.js","original":{"line":71,"column":0}},{"generated":{"line":106,"column":0},"source":"script.js","original":{"line":73,"column":0}},{"generated":{"line":107,"column":0},"source":"script.js","original":{"line":74,"column":0}},{"generated":{"line":108,"column":0},"source":"script.js","original":{"line":75,"column":0}},{"generated":{"line":109,"column":0},"source":"script.js","original":{"line":76,"column":0}},{"generated":{"line":110,"column":0},"source":"script.js","original":{"line":77,"column":0}},{"generated":{"line":111,"column":0},"source":"script.js","original":{"line":78,"column":0}},{"generated":{"line":112,"column":0},"source":"script.js","original":{"line":79,"column":0}},{"generated":{"line":113,"column":0},"source":"script.js","original":{"line":81,"column":0}},{"generated":{"line":114,"column":0},"source":"script.js","original":{"line":82,"column":0}},{"generated":{"line":115,"column":0},"source":"script.js","original":{"line":83,"column":0}},{"generated":{"line":116,"column":0},"source":"script.js","original":{"line":84,"column":0}},{"generated":{"line":117,"column":0},"source":"script.js","original":{"line":86,"column":0}},{"generated":{"line":118,"column":0},"source":"script.js","original":{"line":87,"column":0}},{"generated":{"line":119,"column":0},"source":"script.js","original":{"line":88,"column":0}},{"generated":{"line":120,"column":0},"source":"script.js","original":{"line":89,"column":0}},{"generated":{"line":121,"column":0},"source":"script.js","original":{"line":90,"column":0}},{"generated":{"line":122,"column":0},"source":"script.js","original":{"line":91,"column":0}},{"generated":{"line":123,"column":0},"source":"script.js","original":{"line":92,"column":0}},{"generated":{"line":124,"column":0},"source":"script.js","original":{"line":93,"column":0}},{"generated":{"line":125,"column":0},"source":"script.js","original":{"line":95,"column":0}},{"generated":{"line":126,"column":0},"source":"script.js","original":{"line":96,"column":0}},{"generated":{"line":127,"column":0},"source":"script.js","original":{"line":98,"column":0}},{"generated":{"line":129,"column":0},"source":"script.js","original":{"line":101,"column":0}},{"name":"state","generated":{"line":129,"column":4},"source":"script.js","original":{"line":101,"column":6}},{"generated":{"line":129,"column":9},"source":"script.js","original":{"line":101,"column":11}},{"generated":{"line":129,"column":12},"source":"script.js","original":{"line":101,"column":14}},{"name":"cart","generated":{"line":130,"column":0},"source":"script.js","original":{"line":102,"column":2}},{"name":"cart","generated":{"line":130,"column":2},"source":"script.js","original":{"line":102,"column":2}},{"generated":{"line":130,"column":6},"source":"script.js","original":{"line":102,"column":6}},{"generated":{"line":130,"column":8},"source":"script.js","original":{"line":102,"column":8}},{"generated":{"line":130,"column":9},"source":"script.js","original":{"line":103,"column":4}},{"name":"product","generated":{"line":131,"column":0},"source":"script.js","original":{"line":103,"column":6}},{"name":"product","generated":{"line":131,"column":4},"source":"script.js","original":{"line":103,"column":6}},{"generated":{"line":131,"column":11},"source":"script.js","original":{"line":103,"column":13}},{"generated":{"line":131,"column":13},"source":"script.js","original":{"line":103,"column":15}},{"generated":{"line":131,"column":20},"source":"script.js","original":{"line":103,"column":4}},{"name":"quantity","generated":{"line":132,"column":0},"source":"script.js","original":{"line":103,"column":24}},{"name":"quantity","generated":{"line":132,"column":4},"source":"script.js","original":{"line":103,"column":24}},{"generated":{"line":132,"column":12},"source":"script.js","original":{"line":103,"column":32}},{"generated":{"line":132,"column":14},"source":"script.js","original":{"line":103,"column":34}},{"generated":{"line":133,"column":0},"source":"script.js","original":{"line":103,"column":4}},{"generated":{"line":133,"column":3},"source":"script.js","original":{"line":102,"column":8}},{"generated":{"line":133,"column":5},"source":"script.js","original":{"line":104,"column":4}},{"name":"product","generated":{"line":134,"column":0},"source":"script.js","original":{"line":104,"column":6}},{"name":"product","generated":{"line":134,"column":4},"source":"script.js","original":{"line":104,"column":6}},{"generated":{"line":134,"column":11},"source":"script.js","original":{"line":104,"column":13}},{"generated":{"line":134,"column":13},"source":"script.js","original":{"line":104,"column":15}},{"generated":{"line":134,"column":20},"source":"script.js","original":{"line":104,"column":4}},{"name":"quantity","generated":{"line":135,"column":0},"source":"script.js","original":{"line":104,"column":24}},{"name":"quantity","generated":{"line":135,"column":4},"source":"script.js","original":{"line":104,"column":24}},{"generated":{"line":135,"column":12},"source":"script.js","original":{"line":104,"column":32}},{"generated":{"line":135,"column":14},"source":"script.js","original":{"line":104,"column":34}},{"generated":{"line":136,"column":0},"source":"script.js","original":{"line":104,"column":4}},{"generated":{"line":136,"column":3},"source":"script.js","original":{"line":102,"column":8}},{"generated":{"line":136,"column":4},"source":"script.js","original":{"line":101,"column":14}},{"name":"user","generated":{"line":137,"column":0},"source":"script.js","original":{"line":106,"column":2}},{"name":"user","generated":{"line":137,"column":2},"source":"script.js","original":{"line":106,"column":2}},{"generated":{"line":137,"column":6},"source":"script.js","original":{"line":106,"column":6}},{"generated":{"line":137,"column":8},"source":"script.js","original":{"line":106,"column":8}},{"name":"loggedIn","generated":{"line":138,"column":0},"source":"script.js","original":{"line":106,"column":10}},{"name":"loggedIn","generated":{"line":138,"column":4},"source":"script.js","original":{"line":106,"column":10}},{"generated":{"line":138,"column":12},"source":"script.js","original":{"line":106,"column":18}},{"generated":{"line":138,"column":14},"source":"script.js","original":{"line":106,"column":20}},{"generated":{"line":139,"column":0},"source":"script.js","original":{"line":106,"column":8}},{"generated":{"line":140,"column":0},"source":"script.js","original":{"line":101,"column":14}},{"generated":{"line":140,"column":1},"source":"script.js","original":{"line":101,"column":0}},{"generated":{"line":140,"column":3},"source":"script.js","original":{"line":109,"column":0}},{"generated":{"line":142,"column":0},"source":"script.js","original":{"line":110,"column":0}},{"name":"stateClone","generated":{"line":142,"column":4},"source":"script.js","original":{"line":110,"column":6}},{"generated":{"line":142,"column":14},"source":"script.js","original":{"line":110,"column":16}},{"name":"Object","generated":{"line":142,"column":17},"source":"script.js","original":{"line":110,"column":19}},{"generated":{"line":142,"column":23},"source":"script.js","original":{"line":110,"column":25}},{"name":"assign","generated":{"line":142,"column":24},"source":"script.js","original":{"line":110,"column":26}},{"generated":{"line":142,"column":30},"source":"script.js","original":{"line":110,"column":19}},{"generated":{"line":142,"column":31},"source":"script.js","original":{"line":110,"column":33}},{"generated":{"line":142,"column":33},"source":"script.js","original":{"line":110,"column":19}},{"name":"state","generated":{"line":142,"column":35},"source":"script.js","original":{"line":110,"column":37}},{"generated":{"line":142,"column":40},"source":"script.js","original":{"line":110,"column":19}},{"generated":{"line":142,"column":41},"source":"script.js","original":{"line":110,"column":0}},{"generated":{"line":143,"column":0},"source":"script.js","original":{"line":111,"column":0}},{"name":"stateDeepClone","generated":{"line":143,"column":4},"source":"script.js","original":{"line":111,"column":6}},{"generated":{"line":143,"column":18},"source":"script.js","original":{"line":111,"column":20}},{"generated":{"line":143,"column":21},"source":"script.js","original":{"line":111,"column":23}},{"name":"state","generated":{"line":143,"column":44},"source":"script.js","original":{"line":111,"column":33}},{"generated":{"line":143,"column":49},"source":"script.js","original":{"line":111,"column":23}},{"generated":{"line":143,"column":50},"source":"script.js","original":{"line":111,"column":0}},{"name":"state","generated":{"line":144,"column":0},"source":"script.js","original":{"line":113,"column":0}},{"generated":{"line":144,"column":5},"source":"script.js","original":{"line":113,"column":5}},{"name":"user","generated":{"line":144,"column":6},"source":"script.js","original":{"line":113,"column":6}},{"generated":{"line":144,"column":10},"source":"script.js","original":{"line":113,"column":0}},{"name":"loggedIn","generated":{"line":144,"column":11},"source":"script.js","original":{"line":113,"column":11}},{"generated":{"line":144,"column":19},"source":"script.js","original":{"line":113,"column":0}},{"generated":{"line":144,"column":22},"source":"script.js","original":{"line":113,"column":22}},{"generated":{"line":144,"column":27},"source":"script.js","original":{"line":113,"column":0}},{"name":"console","generated":{"line":145,"column":0},"source":"script.js","original":{"line":114,"column":0}},{"generated":{"line":145,"column":7},"source":"script.js","original":{"line":114,"column":7}},{"name":"log","generated":{"line":145,"column":8},"source":"script.js","original":{"line":114,"column":8}},{"generated":{"line":145,"column":11},"source":"script.js","original":{"line":114,"column":0}},{"name":"stateClone","generated":{"line":145,"column":12},"source":"script.js","original":{"line":114,"column":12}},{"generated":{"line":145,"column":22},"source":"script.js","original":{"line":114,"column":0}},{"name":"console","generated":{"line":146,"column":0},"source":"script.js","original":{"line":116,"column":0}},{"generated":{"line":146,"column":7},"source":"script.js","original":{"line":116,"column":7}},{"name":"log","generated":{"line":146,"column":8},"source":"script.js","original":{"line":116,"column":8}},{"generated":{"line":146,"column":11},"source":"script.js","original":{"line":116,"column":0}},{"name":"stateDeepClone","generated":{"line":146,"column":12},"source":"script.js","original":{"line":116,"column":12}},{"generated":{"line":146,"column":26},"source":"script.js","original":{"line":116,"column":0}},{"generated":{"line":146,"column":29},"source":"script.js","original":{"line":118,"column":0}},{"generated":{"line":148,"column":0},"source":"script.js","original":{"line":119,"column":0}},{"name":"module","generated":{"line":148,"column":4},"source":"script.js","original":{"line":119,"column":4}},{"generated":{"line":148,"column":10},"source":"script.js","original":{"line":119,"column":10}},{"name":"hot","generated":{"line":148,"column":11},"source":"script.js","original":{"line":119,"column":11}},{"generated":{"line":148,"column":14},"source":"script.js","original":{"line":119,"column":0}},{"generated":{"line":148,"column":16},"source":"script.js","original":{"line":119,"column":16}},{"name":"module","generated":{"line":149,"column":0},"source":"script.js","original":{"line":120,"column":2}},{"name":"module","generated":{"line":149,"column":2},"source":"script.js","original":{"line":120,"column":2}},{"generated":{"line":149,"column":8},"source":"script.js","original":{"line":120,"column":8}},{"name":"hot","generated":{"line":149,"column":9},"source":"script.js","original":{"line":120,"column":9}},{"generated":{"line":149,"column":12},"source":"script.js","original":{"line":120,"column":2}},{"name":"accept","generated":{"line":149,"column":13},"source":"script.js","original":{"line":120,"column":13}},{"generated":{"line":149,"column":19},"source":"script.js","original":{"line":120,"column":2}},{"generated":{"line":150,"column":0},"source":"script.js","original":{"line":121,"column":1}}],"sources":{"script.js":"// Importing module\r\n\r\n// import { addToCart } from './shoppingCart.js'; // string with a location of the module\r\n// or importing multiple at once:\r\n// import { addToCart, totalPrice as price, tq } from './shoppingCart.js'; // we can rename imports: totalPrice as price\r\n// addToCart('bread', 5);\r\n// console.log(price, tq);\r\n\r\nconsole.log('Importing module');\r\n\r\n// importing all the exports at once:\r\n// creating an object containg everything that is exported in another module\r\n// import * as ShoppingCart from './shoppingCart.js';\r\n// this module is now basically exporting a public API, just like a class (with methods and promerties)\r\n\r\n// to use something from here we have to take it out from this object\r\n// ShoppingCart.addToCart('bread', 5);\r\n// console.log(ShoppingCart.totalPrice);\r\n\r\n//importing default export (giving it a name we want, without {} like with a named export/import)\r\nimport add from './shoppingCart.js';\r\nadd('pizza', 2);\r\n\r\n// default and named exports can be imported together (but in practice we never mix these two):\r\n// import add, { addToCart, totalPrice as price, tq } from './shoppingCart.js';\r\n// console.log(price);\r\n\r\nimport shoppingCart, { cart } from './shoppingCart.js';\r\nadd('bread', 3);\r\nadd('apples', 6);\r\nconsole.log(cart); // import is a live connection, not simply a copy, they point at the same place in memory (cart was empty array as export from another module, but after calling add() which pushes objects to array, now cart looks like this)\r\n\r\n//// Top level await\r\n// in modules await keyword works outside of async function, but it's blocking execution of entire module, and of the module that is imported to (blocking code)\r\n// const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n// const data = await res.json();\r\n// console.log(data);\r\n\r\nconst getLastPost = async function () {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const data = await res.json();\r\n  console.log(data);\r\n\r\n  return { title: data.at(-1).title, text: data.at(-1).body };\r\n};\r\n\r\nconst lastPost = getLastPost();\r\n\r\n// not very clean\r\n// lastPost.then(last => console.log(last));\r\n\r\n// const lastPost2 = await getLastPost();\r\n// console.log(lastPost2);\r\n\r\n//// Module patern (way of using modules before) - making IIFE (immediatelly invoked function expression)\r\n// const ShoppingCart2 = (function () {\r\n//   const cart = [];\r\n//   const shippingCost = 10;\r\n//   const totalPrice = 237;\r\n//   const totalQuantity = 23;\r\n\r\n//   const addToCart = function (product, quantity) {\r\n//     cart.push({ product, quantity });\r\n//     console.log(\r\n//       `${quantity} ${product} added to cart (shipping cost is ${shippingCost})`\r\n//     );\r\n//   };\r\n\r\n//   const orderStock = function (product, quantity) {\r\n//     console.log(`${quantity} ${product} ordered from supplier`);\r\n//   };\r\n\r\n//   return {\r\n//     addToCart,\r\n//     cart,\r\n//     totalPrice,\r\n//     totalQuantity,\r\n//   };\r\n// })();\r\n\r\n// ShoppingCart2.addToCart('apple', 4);\r\n// ShoppingCart2.addToCart('pizza', 2);\r\n// console.log(ShoppingCart2);\r\n// console.log(ShoppingCart2.shippingCost);\r\n\r\n//// CommonJS modules - in Node.js\r\n// export\r\n// export.function(product, quantity){\r\n//   cart.push({product, quantity})\r\n//   console.log(`${quantity} ${product} added to cart (shipping cost is ${shippingCost})`);\r\n// }\r\n// // import\r\n// const {addToCart} = require(\"./shoppingCart.js\")\r\n\r\n///// introduction to NPM\r\n// import { default as cloneDeep } from './node_modules/lodash-es/cloneDeep.js';\r\n\r\n// with parcel (or any other bundler) there is no need to specify the entire path to a module, instead all we need to say is we want to include lodash library:\r\nimport { default as cloneDeep } from 'lodash-es';\r\n\r\nconst state = {\r\n  cart: [\r\n    { product: 'bread', quantity: 5 },\r\n    { product: 'pizza', quantity: 5 },\r\n  ],\r\n  user: { loggedIn: true },\r\n};\r\n\r\n// creating deep copy\r\nconst stateClone = Object.assign({}, state);\r\nconst stateDeepClone = cloneDeep(state);\r\n\r\nstate.user.loggedIn = false;\r\nconsole.log(stateClone);\r\n\r\nconsole.log(stateDeepClone);\r\n\r\n// whenever we change modules, it will trigger rebuilt with parcel, and that new bundle will be injected into the browser not triggering whole page reload\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"8db28baa3cdfc612ecba0e60e598b730","cacheData":{"env":{}}}